import React, { useState } from "react";
import { base44 } from "@/api/base44Client";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Upload, Loader2, ImageIcon } from "lucide-react";
import { Alert, AlertDescription } from "@/components/ui/alert";

export default function Media() {
  const [uploading, setUploading] = useState(false);
  const [uploadedFiles, setUploadedFiles] = useState([]);
  const [message, setMessage] = useState(null);

  const handleFileUpload = async (e) => {
    const files = Array.from(e.target.files);
    if (files.length === 0) return;

    setUploading(true);
    setMessage(null);

    try {
      const uploadPromises = files.map(file => 
        base44.integrations.Core.UploadFile({ file })
      );
      
      const results = await Promise.all(uploadPromises);
      const urls = results.map(r => r.file_url);
      
      setUploadedFiles(prev => [...urls, ...prev]);
      setMessage({ type: 'success', text: `تم رفع ${files.length} ملف بنجاح!` });
    } catch (error) {
      setMessage({ type: 'error', text: 'حدث خطأ أثناء رفع الملفات' });
    }

    setUploading(false);
  };

  const copyToClipboard = (url) => {
    navigator.clipboard.writeText(url);
    setMessage({ type: 'success', text: 'تم نسخ الرابط!' });
  };

  return (
    <div className="p-6 space-y-6">
      <div>
        <h1 className="text-3xl font-bold text-gray-900">مركز الوسائط</h1>
        <p className="text-gray-500 mt-1">رفع وإدارة الصور والملفات</p>
      </div>

      <Card>
        <CardHeader>
          <CardTitle>رفع ملفات جديدة</CardTitle>
        </CardHeader>
        <CardContent>
          {message && (
            <Alert variant={message.type === 'success' ? 'default' : 'destructive'} className="mb-4">
              <AlertDescription>{message.text}</AlertDescription>
            </Alert>
          )}

          <label className="cursor-pointer">
            <div className="border-2 border-dashed border-gray-300 rounded-lg p-12 text-center hover:border-blue-500 transition-colors">
              {uploading ? (
                <Loader2 className="w-12 h-12 mx-auto text-blue-600 animate-spin mb-4" />
              ) : (
                <Upload className="w-12 h-12 mx-auto text-gray-400 mb-4" />
              )}
              <p className="text-lg font-medium mb-2">
                {uploading ? 'جاري الرفع...' : 'اضغط لاختيار الملفات'}
              </p>
              <p className="text-sm text-gray-500">أو اسحب الملفات هنا</p>
            </div>
            <input
              type="file"
              multiple
              accept="image/*"
              onChange={handleFileUpload}
              className="hidden"
              disabled={uploading}
            />
          </label>
        </CardContent>
      </Card>

      {uploadedFiles.length > 0 && (
        <Card>
          <CardHeader>
            <CardTitle>الملفات المرفوعة ({uploadedFiles.length})</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4">
              {uploadedFiles.map((url, index) => (
                <div key={index} className="group relative">
                  <img 
                    src={url} 
                    alt={`Upload ${index}`}
                    className="w-full h-32 object-cover rounded-lg"
                  />
                  <div className="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-60 transition-all rounded-lg flex items-center justify-center">
                    <Button
                      onClick={() => copyToClipboard(url)}
                      className="opacity-0 group-hover:opacity-100 transition-opacity"
                      size="sm"
                    >
                      نسخ الرابط
                    </Button>
                  </div>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  );
}

